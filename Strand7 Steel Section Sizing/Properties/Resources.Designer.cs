//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Strand7_Steel_Section_Sizing.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Strand7_Steel_Section_Sizing.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Artboard_1 {
            get {
                object obj = ResourceManager.GetObject("Artboard_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A post processing procedure whereby identical properties are combined. This is especially useful when using the explode procedure..
        /// </summary>
        internal static string combine_Tooltip {
            get {
                return ResourceManager.GetString("combine_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide a load case or a list of load cases to be considered for stress optimisation.
        ///A dash can be used to indicate a range of cases, e.g. 1-5.
        ///The load case number is as it appears in the open result file.
        ///
        ///A deflection limit should be provided in mm.
        ///The deflection optimisation considers the absolute displacement of all nodes.
        /// </summary>
        internal static string def_Tooltip {
            get {
                return ResourceManager.GetString("def_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a new beam property for each beam element so that beams can be optimised independantly. Choose a Strand7 file to &apos;explode&apos; a new Strand7 file will be created which can be modified before optimising..
        /// </summary>
        internal static string explode_Tooltip {
            get {
                return ResourceManager.GetString("explode_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note that the frequency solver should already be set up prior to running the optimisation.
        ///
        ///A frequency limit should be provided in Hz.
        ///The frequency optimisation aims to increase the fundamental mode above the limit provided..
        /// </summary>
        internal static string freq_Tooltip {
            get {
                return ResourceManager.GetString("freq_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] info_circle_regular {
            get {
                object obj = ResourceManager.GetObject("info_circle_regular", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide a list of properties to be optimised.
        ///The list should be the property numbers seperated by commas.
        ///A dash can be used to indicate a range of properties, e.g. 1-5.
        ///To include all the properties in the Strand7 model use the word &quot;all&quot;.
        ///If using multiple section catalogues, each group of properties should be seperated by a semicolon e.g. 1,2 ; 3-5.
        /// </summary>
        internal static string prop_Tooltip {
            get {
                return ResourceManager.GetString("prop_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provide a load case or a list of load cases to be considered for stress optimisation.
        ///A dash can be used to indicate a range of cases, e.g. 1-5.
        ///The load case number is as it appears in the open result file.
        ///
        ///A stress limit should be provided in MPa..
        /// </summary>
        internal static string stress_Tooltip {
            get {
                return ResourceManager.GetString("stress_Tooltip", resourceCulture);
            }
        }
    }
}
